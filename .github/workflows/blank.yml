name: Postman Monitor + Newman Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # ---------------------------
  # 1. Update collection & trigger monitor
  # ---------------------------
  update-collection:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update Weather Monitoring Collection
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: |
          mkdir -p artifacts/monitor

          # Update collection in Postman
          curl -s -X PUT "https://api.getpostman.com/collections/45974783-18e45aea-8ea3-4fb6-bdb9-8185dd142f48" \
            -H "X-Api-Key: $POSTMAN_API_KEY" \
            -H "Content-Type: application/json" \
            -d @Weather_Monitoring_Test_Demo.postman_collection.json \
            -o artifacts/monitor/collection_update.json

          # Trigger monitor run
          curl -s -X POST "https://api.getpostman.com/monitors/1f087cde-8b0e-4d40-bf0f-7941bfe55d4c/run" \
            -H "X-Api-Key: $POSTMAN_API_KEY" \
            -o artifacts/monitor/monitor_trigger.json

      - name: Upload raw monitor artifacts
        uses: actions/upload-artifact@v4
        with:
          name: monitor-raw
          path: artifacts/monitor

  # ---------------------------
  # 2. Fetch monitor results & build HTML + CSV
  # ---------------------------
  monitor-report:
    needs: update-collection
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update -y && sudo apt-get install -y jq

      - name: Fetch latest monitor results & build report
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: |
          mkdir -p monitor_summary

          # Fetch latest monitor results
          curl -s -H "X-Api-Key: $POSTMAN_API_KEY" \
            "https://api.getpostman.com/monitors/1f087cde-8b0e-4d40-bf0f-7941bfe55d4c/results/latest" \
            -o monitor_summary/results.json

          # Build CSV
          echo "timestamp,status,responseTime" > monitor_summary/monitor.csv
          jq -r '.results[] | [.timestamp, .status, .run.info.responseTime] | @csv' monitor_summary/results.json \
            >> monitor_summary/monitor.csv

          # Build HTML
          {
            echo "<!DOCTYPE html><html><head><meta charset='UTF-8'><title>Postman Monitor Report</title>"
            echo "<style>
              body { font-family: Arial, sans-serif; margin: 20px; }
              h1 { color: #333; }
              table { border-collapse: collapse; width: 100%; margin-top: 20px; }
              th, td { border: 1px solid #ccc; padding: 8px; text-align: center; }
              th { background-color: #f4f4f4; }
              .fail { background-color: #f8d7da; }
              .pass { background-color: #d4edda; }
            </style></head><body>"

            echo "<h1>Postman Monitor Report</h1>"
            echo "<table><tr><th>Timestamp</th><th>Status</th><th>Response Time (ms)</th></tr>"
            tail -n +2 monitor_summary/monitor.csv | while IFS=, read ts status rt; do
              if [[ $status == "ok" ]]; then
                echo "<tr class='pass'><td>$ts</td><td>$status</td><td>$rt</td></tr>"
              else
                echo "<tr class='fail'><td>$ts</td><td>$status</td><td>$rt</td></tr>"
              fi
            done
            echo "</table></body></html>"
          } > monitor_summary/monitor.html

      - name: Upload monitor report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: monitor-report
          path: monitor_summary/

  # ---------------------------
  # 3. Newman run with CSV dataset
  # ---------------------------
  newman-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Node & Newman
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nodejs npm jq
          npm install -g newman newman-reporter-htmlextra

      - name: Run Newman Collection with CSV
        run: |
          mkdir -p newman_reports

          newman run Weather_Monitoring_Test_Demo.postman_collection.json \
            -d combined_cities.csv \
            --reporters cli,htmlextra,json \
            --reporter-htmlextra-export "newman_reports/newman_report.html" \
            --reporter-json-export "newman_reports/newman_report.json" \
            --delay-request 250

          # Build CSV summary from JSON
          echo "iteration,requestName,status,responseTime" > newman_reports/newman_report.csv
          jq -r '.run.executions[] | [.cursor.iteration, .item.name, .response.status, .response.responseTime] | @csv' \
            newman_reports/newman_report.json >> newman_reports/newman_report.csv

      - name: Upload Newman report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: newman-report
          path: newman_reports/
